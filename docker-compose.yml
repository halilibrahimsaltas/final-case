version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  client:
    build: 
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./client:/app
      - /app/node_modules
    restart: unless-stopped

  server:
    build: 
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    env_file:
      - .env
    environment:
      - KAFKA_BROKERS=kafka:29092
      - PORT=4000
      - CONNECTION_STRING=${MONGODB_URI}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - kafka
      - redis
    volumes:
      - ./server:/app
      - /app/node_modules
    restart: unless-stopped

  payment-service:
    build: 
      context: ./payment-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    env_file:
      - .env
    environment:
      - KAFKA_BROKERS=kafka:29092
      - PORT=3001
      - CONNECTION_STRING=${MONGODB_URI}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - kafka
      - redis
    volumes:
      - ./payment-service:/app
      - /app/node_modules
    restart: unless-stopped

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

networks:
  default:
    driver: bridge

volumes:
  redis_data: